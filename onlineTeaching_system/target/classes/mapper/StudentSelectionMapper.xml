<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.StudentSelectionMapper">
    <resultMap id="BaseResultMap" type="com.model.StudentSelection">
        <constructor>
            <idArg column="ss_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="s_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="c_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="exam_score" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="final_score" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        </constructor>
    </resultMap>
    <resultMap id="BaseResultMap1" type="com.model.StudentSelection">
        <id column="ss_id" property="ssId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="s_id" property="sId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="c_id" property="cId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="d_id" property="dId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="d_name" property="dName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="s_name" property="sName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="s_age" property="sAge" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="s_sex" property="sSex" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="s_major" property="sMajor" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="s_class" property="sClass" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="sh_score" property="shScore" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="h_id" property="hId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="cr_id" property="crId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="exam_score" property="examScore" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <result column="final_score" property="finalScore" jdbcType="DOUBLE" javaType="java.lang.Double"/>
    </resultMap>
    <resultMap id="BaseResultMap2" type="com.model.StudentHomework">
        <id column="sh_id" property="shId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="s_id" property="sId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="c_id" property="cId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="sh_score" property="shScore" jdbcType="DOUBLE" javaType="java.lang.Double"/>
        <result column="h_id" property="hId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="cr_id" property="crId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
    </resultMap>
    <resultMap id="BaseResultMap3" type="com.model.StudentSelection">
        <id column="ss_id" property="ssId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="s_id" property="sId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="t_id" property="tId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="c_id" property="cId" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="c_name"  property="cName" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="c_info" property="cInfo"  jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result column="c_capacity" property="cCapacity"  jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result column="t_name"  property="tName" jdbcType="VARCHAR" javaType="java.lang.String"/>
    </resultMap>
    <select id="selectStudentCourseBySid" resultMap="BaseResultMap3">
        SELECT
        course.c_id,
        course.c_name,
        course.c_info,
        course.c_capacity,
        teacher.t_name,
        student_selection.s_id,
        teacher.t_id
        FROM
        course
        INNER JOIN student_selection ON student_selection.c_id = course.c_id
        INNER JOIN teacher ON course.t_id = teacher.t_id
        where s_id= #{sId,jdbcType=INTEGER}
    </select>
    <select id="selectStudentByCid" resultMap="BaseResultMap1" parameterType="java.lang.Integer">
        SELECT
        student_selection.s_id,
        student_selection.c_id,
        department.d_name,
        student.s_name,
        student.s_age,
        student.s_sex,
        student.s_major,
        student.s_class
        FROM
        student_selection
        INNER JOIN student ON student_selection.s_id = student.s_id
        INNER JOIN department ON student.d_id = department.d_id
        where c_id = #{cId,jdbcType=INTEGER}
        group by student_selection.s_id
  </select>
    <select id="selectAllScore" resultMap="BaseResultMap2">
               SELECT
        student_homework.sh_score
        FROM
        student_homework
        INNER JOIN homework ON student_homework.h_id = homework.h_id
        INNER JOIN curriculum ON homework.cr_id = curriculum.cr_id
        where c_id= #{cId,jdbcType=INTEGER} and s_id= #{sId,jdbcType=INTEGER}
  </select>
    <select id="selectHomeworkCount" resultType="int">
        SELECT
        count(*)
        FROM
        homework
        INNER JOIN curriculum ON homework.cr_id = curriculum.cr_id
        where c_id= #{cId,jdbcType=INTEGER}
  </select>
    <select id="selectScoreByCid" resultMap="BaseResultMap1" parameterType="java.lang.Integer">
                   SELECT
            curriculum.c_id,
            student.s_id,
            student.s_name,
            group_concat(student_homework.sh_score Separator '; ') AS sh_score,
            student.s_class,
            student.s_major,
            department.d_name,
            student_selection.exam_score,
            student_selection.final_score
            FROM
            student_homework
            INNER JOIN homework ON student_homework.h_id = homework.h_id
            INNER JOIN curriculum ON homework.cr_id = curriculum.cr_id
            INNER JOIN student ON student_homework.s_id = student.s_id
            INNER JOIN department ON student.d_id = department.d_id
            INNER JOIN student_selection ON student_selection.s_id = student.s_id
        where curriculum.c_id=#{cId,jdbcType=INTEGER}
        group by student.s_id

    </select>
    <delete id="deleteStudentSelectionBySid" parameterType="java.lang.Integer">
    delete from student_selection
    where s_id = #{sId,jdbcType=INTEGER}
  </delete>
    <select id="selectMyScoreByCidAndSid" resultMap="BaseResultMap1" parameterType="java.lang.Integer">
        SELECT
        curriculum.c_id,
        student.s_id,
        student.s_name,
        group_concat(student_homework.sh_score Separator '; ') AS sh_score,
        student.s_class,
        student_selection.exam_score,
        student_selection.final_score,
        student.s_major
        FROM
        student_homework
        INNER JOIN homework ON student_homework.h_id = homework.h_id
        INNER JOIN curriculum ON homework.cr_id = curriculum.cr_id
        INNER JOIN student ON student_homework.s_id = student.s_id
        INNER JOIN student_selection ON student_selection.s_id = student.s_id
        where curriculum.c_id=#{cId,jdbcType=INTEGER} and student.s_id=#{sId}
        group by student.s_name
    </select>

    <insert id="addStudentSelection" parameterType="com.model.StudentSelection" useGeneratedKeys="true"
            keyProperty="ssId">
        insert into student_selection
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sId != null">
                s_id,
            </if>
            <if test="cId != null">
                c_id,
            </if>
            <if test="examScore != null">
                exam_score,
            </if>
            <if test="finalScore != null">
                final_score,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sId != null">
                #{sId,jdbcType=INTEGER},
            </if>
            <if test="cId != null">
                #{cId,jdbcType=INTEGER},
            </if>
            <if test="examScore != null">
                #{examScore,jdbcType=DOUBLE},
            </if>
            <if test="finalScore != null">
                #{finalScore,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateExamScoreBySid" parameterType="com.model.StudentSelection">
        update student_selection
        <set>
            <if test="sId != null">
                s_id = #{sId,jdbcType=INTEGER},
            </if>
            <if test="cId != null">
                c_id = #{cId,jdbcType=INTEGER},
            </if>
            <if test="examScore != null">
                exam_score= #{examScore,jdbcType=DOUBLE},
            </if>
            <if test="finalScore != null">
                final_score= #{finalScore,jdbcType=DOUBLE},
            </if>
        </set>
        where s_id = #{sId,jdbcType=INTEGER}
    </update>

</mapper>